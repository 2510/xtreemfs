# optional debug level
# 0: emergency
# 1: alert
# 2: critical
# 3: error
# 4: warning
# 5: notice
# 6: info (default)
# 7: debug
#debug.level = 7

# optional debug categories - a space or comma-separated list of log message categories
# all (default) - enable logging for all categories
# lifecycle     - log messaages pertaining to service lifecycles (threads)
# buffer        - logs messages pertaining to buffers
# net           - network-related log messages
# auth          - authorization-related log messages
# stage         - log messages pertaining to the request flow through the stages
# proc          - log messages pertaining to any kind of request processing
# db            - log messages pertaining storage on OSD or database access on MRC/DIR
# replication   - logs messages pertaining to replication 
# misc          - any other log messages
#debug.categories = all

# port for the service to listen on
listen.port = 32640

http_port = 30640

# optional address for network device, "any" if not specified
#listen.address = 127.0.0.1

# optinal host name that is used to register the service at the DIR
# hostname = foo.bar.com

# Directory Service endpoint
dir_service.host = localhost
dir_service.port = 32638

# directory containing XtreemFS file content
object_dir = /tmp/xtreemfs-test/osd/

# granularity of the local clock (in ms)
local_clock_renewal = 50

# interval between two remote clock syncs (in ms)
remote_time_sync = 60000

# specify whether SSL is required
ssl.enabled = false

# send and receive buffer sizes of sockets 
#socket.send_buffer_size = 262144
#socket.recv_buffer_size = 262144

report_free_space = true

# specify whether internal OSD checksums are required
# if the flag is set to true, the OSD will calculate checksums for
# newly created objects, which will be checked when the object is read
checksums.enabled = false

# algorithm used for checksum calculation
# by default, Adler32, CRC32, MD5 and SHA-1 are supported
checksums.algorithm = Adler32

# UUID for the OSD
# IMPORTANT: replace 'localhost' with a reachable host name/IP address
#uuid = http://farnsworth.zib.de:32640
uuid = test-localhost-OSD

checksums.enabled = false

geographic_coordinates = 41.388417,2.114632

capability_secret = Yagga

# administrator password for privileged operations
#admin_password = blub

# Optional directory containing deployable policy implementations.
# Policies can be directly deployed as .java or .class files in this directory
# or one of its subdirectories. They will be compiled at startup time and
# loaded at runtime. Policies may have external dependencies that can be
# deployed either as .java, .class or .jar files. While Java and Class files
# may be located in subdirectories, JAR files mustn't.
policy_dir = /etc/xos/xtreemfs/policies

# If you want to monitor your XtreemFS installation through SNMP 
# uncomment the following lines. You have to set snmp.enabled = true
# and provide a listen port and optional a address. Also optional 
# is a path to an aclfile which controls which hosts can access the
# monitoring information via SNMP.
#snmp.enabled = true
#snmp.address = localhost
#snmp.port = 34640
#snmp.aclfile = etc/xos/xtreemfs/snmp.acl

# vivaldi algorithm configuration

# the time between two recalculations of the vivaldi coordinates is randomly
# choosen as recalculation_interval +/- recalculation_epsilon
vivaldi.recalculation_interval_in_ms = 300 
vivaldi_recalculation_epsilon_in_ms = 30

# the number of vivaldi iterations before a new list of peers (OSDs) will be
# fetched from the DIR
#vivaldi.iterations_before_updating = 12

# number of retries before accepting a 'suspiciously high' RTT
#vivaldi.max_retries_for_a_request = 2

# maximum number of milliseconds an OSD waits for a RESPONSE before discarding
# its corresponding REQUEST (expiration times smaller than 
# vivaldi.timer_interval_in_ms are not granted)
#vivaldi.max_request_timeout_in_ms = 10000

# period of time between timer executions (used for regular tasks)
#vivaldi.timer_interval_in_ms = 60000
